{"ast":null,"code":"var _jsxFileName = \"/Users/aatishyasood/Desktop/Desktop/Web development/check/QuikChefs-1/src/pages/Career.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Career.css'; // Import the CSS file\nimport Footer from \"../components/Footer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesomeIcon\nimport { faSearch, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Career = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [locationTerm, setLocationTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false); // Track if a search has been performed\n\n  const mockData = [{\n    title: 'Software Engineer',\n    location: 'Redmond, WA',\n    id: '12345'\n  }, {\n    title: 'Product Manager',\n    location: 'San Francisco, CA',\n    id: '67890'\n  }, {\n    title: 'Data Scientist',\n    location: 'New York, NY',\n    id: '11223'\n  }];\n  const handleSearch = e => {\n    e.preventDefault();\n    setHasSearched(true); // Set hasSearched to true when the form is submitted\n\n    const filteredResults = mockData.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()) && job.location.toLowerCase().includes(locationTerm.toLowerCase()));\n    setResults(filteredResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Because impact matters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"search-form\",\n            onSubmit: handleSearch,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSearch,\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search by job title, ID, or keyword\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMapMarkerAlt,\n                className: \"input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"City, state, or country/region\",\n                value: locationTerm,\n                onChange: e => setLocationTerm(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-results\",\n        children: [hasSearched ?\n        // Only show results or \"No jobs found\" after a search\n        results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No jobs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: results.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [job.title, \" - \", job.location, \" (ID: \", job.id, \")\"]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this) : null, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Career, \"0a0HTDjf5fZ9BoPHHtX460yKLog=\");\n_c = Career;\nexport default Career;\nvar _c;\n$RefreshReg$(_c, \"Career\");","map":{"version":3,"names":["React","useState","Footer","FontAwesomeIcon","faSearch","faMapMarkerAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","Career","_s","searchTerm","setSearchTerm","locationTerm","setLocationTerm","results","setResults","hasSearched","setHasSearched","mockData","title","location","id","handleSearch","e","preventDefault","filteredResults","filter","job","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","icon","type","placeholder","value","onChange","target","length","map","_c","$RefreshReg$"],"sources":["/Users/aatishyasood/Desktop/Desktop/Web development/check/QuikChefs-1/src/pages/Career.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Career.css'; // Import the CSS file\nimport Footer from \"../components/Footer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesomeIcon\nimport { faSearch, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'; \n\n\nconst Career = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [locationTerm, setLocationTerm] = useState('');\n    const [results, setResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false); // Track if a search has been performed\n\n    const mockData = [\n        { title: 'Software Engineer', location: 'Redmond, WA', id: '12345' },\n        { title: 'Product Manager', location: 'San Francisco, CA', id: '67890' },\n        { title: 'Data Scientist', location: 'New York, NY', id: '11223' },\n    ];\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setHasSearched(true); // Set hasSearched to true when the form is submitted\n\n        const filteredResults = mockData.filter(\n            (job) =>\n                job.title.toLowerCase().includes(searchTerm.toLowerCase()) &&\n                job.location.toLowerCase().includes(locationTerm.toLowerCase())\n        );\n        setResults(filteredResults);\n    };\n\n    return (\n        <>\n        <div>\n        <header>\n                <h1>Because impact matters</h1>\n                <nav>\n                    <form id=\"search-form\" onSubmit={handleSearch}>\n                        <div className=\"input-container\">\n                            <FontAwesomeIcon icon={faSearch} className=\"input-icon\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Search by job title, ID, or keyword\"\n                                value={searchTerm}\n                                onChange={(e) => setSearchTerm(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"input-container\">\n                            <FontAwesomeIcon icon={faMapMarkerAlt} className=\"input-icon\" />\n                            <input\n                                type=\"text\"\n                                placeholder=\"City, state, or country/region\"\n                                value={locationTerm}\n                                onChange={(e) => setLocationTerm(e.target.value)}\n                            />\n                        </div>\n                        <button type=\"submit\">Search</button>\n                    </form>\n                </nav>\n            </header>\n\n            {/* <section id=\"life-at-company\">\n                <h2>Life at Our Company</h2>\n                <p>Content about life at the company goes here.</p>\n            </section> */}\n\n            <div id=\"search-results\">\n                {hasSearched ? ( // Only show results or \"No jobs found\" after a search\n                    results.length === 0 ? (\n                        <p>No jobs found.</p>\n                    ) : (\n                        <ul>\n                            {results.map((job) => (\n                                <li key={job.id}>\n                                    {job.title} - {job.location} (ID: {job.id})\n                                </li>\n                            ))}\n                        </ul>\n                    )\n                ) : null} {/* Show nothing before searching */}\n            </div>\n\n            \n        </div>\n        <Footer/>\n        </>\n    );\n};\n\nexport default Career;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}